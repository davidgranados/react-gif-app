{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","onAddCategory","useState","newCategory","setNewCategory","onSubmit","e","preventDefault","trim","length","type","onChange","target","value","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","params","q","limit","api_key","queryString","Object","keys","map","key","encodeURIComponent","join","fetch","response","json","data","gif","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","gifs","useFetchGifs","GifExpertApp","categories","setCategories","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA2BeA,EAxBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAChCC,EADgC,KACnBC,EADmB,KAYvC,OACE,uBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAYK,OAAOC,OAAS,IAC9BR,EAAcE,GACdC,EAAe,MAIjB,UACE,uBAAOM,KAAK,OAAOC,SAZS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChCR,EAAeQ,EAAOC,QAWkCA,MAAOV,IAC7D,wBAAQO,KAAK,SAAb,kC,QCPSI,EATK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC/B,OACE,sBAAKF,GAAIA,EAAIG,UAAU,yCAAvB,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCoBKK,EA1BF,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACRC,EAAS,CACbC,EAAGH,EACHI,MAAO,GACPC,QAAS,oCAEM,uCACbC,EAAcC,OAAOC,KAAKN,GAC3BO,KAAI,SAACC,GACJ,OACEC,mBAAmBD,GAAO,IAAMC,mBAAmBT,EAAOQ,OAG7DE,KAAK,KACFjB,EAdQ,UAMG,uCANH,YAcaW,GAdb,SAeSO,MAAMlB,GAff,cAeRmB,EAfQ,gBAgBSA,EAASC,OAhBlB,uBAgBNC,EAhBM,EAgBNA,KAhBM,kBAiBNA,EAAKP,KAAI,SAACQ,GAChB,MAAO,CACLxB,GAAIwB,EAAIxB,GACRC,MAAOuB,EAAIvB,MACXC,IAAKsB,EAAIC,OAAOC,iBAAiBxB,SArBvB,4CAAH,sDC0BEyB,EArBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdpB,mBAAS,CACjCoC,KAAM,GACNK,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAAAC,GACrBH,EAAS,CACPP,KAAMU,EACNL,SAAS,SAGZ,CAACrB,IAEGsB,EDXyBK,CAAa3B,GAA/B0B,EADkB,EACxBV,KAAYK,EADY,EACZA,QACpB,OACE,qCACE,6BAAKrB,IACJqB,GAAW,mBAAGzB,UAAU,mCAAb,2BACT8B,EAAKvC,QACN,qBAAKS,UAAU,8CAAf,SACG8B,EAAKjB,KAAI,SAACQ,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIxB,aESnBmC,EAnBM,WAAO,IAAD,EACWhD,mBAAS,CAAC,cADrB,mBAClBiD,EADkB,KACNC,EADM,KAKzB,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAanD,cAPK,SAACE,GACrBiD,GAAc,SAACC,GAAD,OAAgBlD,GAAhB,mBAAgCkD,UAO5C,6BACGF,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTxBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4939e7f6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({onAddCategory}) => {\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const handleNewCategoryChange = ({target}) => {\r\n    setNewCategory(target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newCategory.trim().length > 2) {\r\n      onAddCategory(newCategory);\r\n      setNewCategory('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" onChange={handleNewCategoryChange} value={newCategory}/>\r\n      <button type=\"submit\">Add New Category</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  onAddCategory: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div id={id} className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","const getGifs = async (category) => {\r\n  const params = {\r\n    q: category,\r\n    limit: 10,\r\n    api_key: \"C5NwjWaDX2G3sZZVj5grW5eQm7qSon4i\",\r\n  };\r\n  const endpoint = \"https://api.giphy.com/v1/gifs/search\";\r\n  var queryString = Object.keys(params)\r\n    .map((key) => {\r\n      return (\r\n        encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\r\n      );\r\n    })\r\n    .join(\"&\");\r\n  const url = `${endpoint}?${queryString}`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  return  data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images.downsized_medium.url,\r\n    };\r\n  });\r\n};\r\n\r\nexport default getGifs;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GifGridItem from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nconst GifGrid = ({ category }) => {\n  const { data: gifs, loading } = useFetchGifs(category);\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n      {!!gifs.length && (\n        <div className=\"card-grid animate__animated animate__fadeIn\">\n          {gifs.map((gif) => (\n            <GifGridItem key={gif.id} {...gif} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import {useEffect, useState} from \"react\";\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(category).then(gifs => {\n      setState({\n        data: gifs,\n        loading: false\n      })\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./AddCategory\";\nimport GifGrid from \"./GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n  const onAddCategory = (newCategory) => {\n    setCategories((prevState) => [newCategory, ...prevState]);\n  };\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategory onAddCategory={onAddCategory} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from \"./components/GifExpertApp\";\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}